Ques.1.  Briefly explain FCFS?

Ans> FCFS stands for First Come First Serve. In the FCFS scheduling algorithm, the job that arrived first in the ready queue is allocated to the CPU and then the job that came second and so on. FCFS is a non-preemptive scheduling algorithm as a process that holds the CPU until it either terminates or performs I/O. Thus, if a longer job has been assigned to the CPU then many shorter jobs after it will have to wait.


Ques.2. What is the RR scheduling algorithm?

Ans> A round-robin scheduling algorithm is used to schedule the process fairly for each job a time slot or quantum and interrupting the job if it is not completed by then the job comes after the other job which is arrived in the quantum time that makes these scheduling fairly.

Round-robin is cyclic in nature, so starvation doesn’t occur
Round-robin is a variant of first come, first served scheduling
No priority, special importance is given to any process or task
RR scheduling is also known as Time slicing scheduling


Ques.3.  What are the necessary conditions which can lead to a deadlock in a system?

Ans> Mutual Exclusion: There is a resource that cannot be shared. 
Hold and Wait: A process is holding at least one resource and waiting for another resource, which is with some other process. 
No Preemption: The operating system is not allowed to take a resource back from a process until the process gives it back. 
Circular Wait:  A set of processes are waiting for each other in circular form. 
 

Ques.4.  Enumerate the different RAID levels?

Ans> A redundant array of independent disks is a set of several physical disk drives that the operating system sees as a single logical unit. It played a significant role in narrowing the gap between increasingly fast processors and slow disk drives. RAID has different levels:

Level-0
Level-1
Level-2
Level-3
Level-4
Level-5
Level-6


Ques.5.  What is Banker’s algorithm?

Ans> The banker’s algorithm is a resource allocation and deadlock avoidance algorithm that tests for safety by simulating the allocation for predetermined maximum possible amounts of all resources, then makes an “s-state” check to test for possible activities, before deciding whether allocation should be allowed to continue.


Ques.6.  What factors determine whether a detection algorithm must be utilized in a deadlock avoidance system?

Ans> One is that it depends on how often a deadlock is likely to occur under the implementation of this algorithm. The other has to do with how many processes will be affected by deadlock when this algorithm is applied.


Ques.7.  State the main difference between logical and physical address space?

Ans> Parameter	LOGICAL ADDRESS	PHYSICAL ADDRESS
Basic	generated by CPU.	location in a memory unit.
Address Space	Logical Address Space is a set of all logical addresses generated by the CPU in reference to a program.	Physical Address is a set of all physical addresses mapped to the corresponding logical addresses.
Visibility	Users can view the logical address of a program.	Users can never view the physical address of the program.
Generation	generated by the CPU.	Computed by MMU.
Access	The user can use the logical address to access the physical address.	The user can indirectly access physical address but not directly.


Ques.8.  How does dynamic loading aid in better memory space utilization?

Ans> With dynamic loading, a routine is not loaded until it is called. This method is especially useful when large amounts of code are needed in order to handle infrequently occurring cases such as error routines.


Ques.9.  What are overlays?

Ans> The concept of overlays is that whenever a process is running it will not use the complete program at the same time, it will use only some part of it. Then overlays concept says that whatever part you required, you load it and once the part is done, then you just unload it, which means just pull it back and get the new part you required and run it. Formally, “The process of transferring a block of program code or other data into internal memory, replacing what is already stored”.


Ques.10.  What is fragmentation?

Ans> Processes are stored and remove from memory, which makes free memory space, which is too little to even consider utilizing by different processes.  Suppose, that process is not ready to dispense to memory blocks since its little size and memory hinder consistently stay unused is called fragmentation. This kind of issue occurs during a dynamic memory allotment framework when free blocks are small, so it can’t satisfy any request.
